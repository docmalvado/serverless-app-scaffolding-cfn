AWSTemplateFormatVersion: 2010-09-09 
Description: Deploy a complete ECS + Fargate solution.
Parameters:
  project:
    Type: String
    AllowedPattern: ^(?:[a-z0-9]+(?:[-][a-z0-9]+)*)+$ 
  environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  cfnBucketName:
    Type: String
  serviceName:
    Type: String
  serviceRepository:
    Type: String
    Description: "E.g: owner/repo_name"
  repositoryBranch:
    Type: String
    Default: main
  imageVersion:
    Type: String
    Default: latest
  containerSize:
    Type: String
    Description: CPU Size | RAM Size
    Default: 256|0.5GB
    AllowedValues:
      - 256|0.5GB
      - 256|1GB
      - 256|2GB
      - 512|1GB
      - 512|2GB
      - 512|3GB
      - 512|4GB
      - 1024|2GB
      - 1024|3GB
      - 1024|4GB
      - 1024|5GB
      - 1024|6GB
      - 1024|7GB
      - 1024|8GB
      - 2048|4GB
      - 2048|5GB
      - 2048|6GB
      - 2048|7GB
      - 2048|8GB
      - 2048|9GB
      - 2048|10GB
      - 2048|11GB
      - 2048|12GB
      - 2048|13GB
      - 2048|14GB
      - 2048|15GB
      - 2048|16GB
      - 4096|8GB
      - 4096|9GB
      - 4096|10GB
      - 4096|11GB
      - 4096|12GB
      - 4096|13GB
      - 4096|14GB
      - 4096|15GB
      - 4096|16GB
      - 4096|17GB
      - 4096|18GB
      - 4096|19GB
      - 4096|20GB
      - 4096|21GB
      - 4096|22GB
      - 4096|23GB
      - 4096|24GB
      - 4096|25GB
      - 4096|26GB
      - 4096|27GB
      - 4096|28GB
      - 4096|29GB
      - 4096|30GB
  containerPort:
    Type: Number
    Default: 8080
  healthCheckPath:
    Type: String
    Default: /health
  basePath:
    Type: String
    Default: /
  priority:
    Type: Number
    Description: This value must be unique in all services
    Default: 1
  minContainers:
    Type: Number
    Default: 0
  maxContainers:
    Type: Number
    Default: 3
  autoScalingTargetValue:
    Type: Number
    Description: CPU average usage
    Default: 40
  deployService:
    Type: String
    Dscription: First time must be false
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: Project Information
        Parameters:
          - project
          - environment
      - Label:
          default: Service Information
        Parameters:
          - serviceName
          - serviceRepository
          - repositoryBranch
          - priority
          - basePath
          - healthCheckPath
          - imageVersion
          - containerSize
          - containerPort
          - minContainers
          - maxContainers
          - autoScalingTargetValue
          - deployService
      - Label:
          default: Other information
        Parameters:
          - cfnBucketName
    ParameterLabels:
      project:
        default: "Project's name:"
      environment:
        default: "Project's environment:"
      cfnBucketName:
        default: "Cloudformation bucket:"
      serviceName:
        default: "Service name:"
      serviceRepository:
        default: "Service repository:"
      repositoryBranch:
        default: "Repository branch:"
      priority:
        default: "Priority in load balancer:"
      basePath:
        default: "Service base path:"
      healthCheckPath:
        default: "Service health check path:"
      imageVersion:
        default: "Image version:"
      containerSize:
        default: "Container size:"
      containerPort:
        default: "Container port:"
      minContainers:
        default: "Autoscaling min containers:"
      maxContainers:
        default: "Autoscaling max containers:"
      autoScalingTargetValue:
        default: "Autoscaling threshold:"
      deployService:
        default: "Deploy service:"
Conditions:
  doDeploy: !Equals 
    - !Ref deployService
    - 'true'
Resources:
  TaskRoles:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/service/modules/task-roles.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment

  ImageRepository:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/service/modules/image-repository.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment
        service: !Ref serviceName

  Service:
    Type: AWS::CloudFormation::Stack
    Condition: doDeploy
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/service/modules/service.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment
        serviceName: !Ref serviceName
        clusterName:
          Fn::ImportValue:
            !Sub '${project}-${environment}-cluster-clusterName'
        vpcId: 
          Fn::ImportValue:
            !Sub ${project}-foundations-vpcId
        loadBalancerSecurityGroupId:
          Fn::ImportValue:
            !Sub '${project}-${environment}-cluster-loadBalancerSecurityGroupId'
        loadBalancerListenerARN: 
          Fn::ImportValue:
            !Sub '${project}-${environment}-cluster-loadBalancerListenerARN'
        serviceSubnetsIdList: 
          Fn::ImportValue:
            !Sub "${project}-foundations-privateSubnetsIdList"
        namespaceId: 
          Fn::ImportValue:
            !Sub '${project}-${environment}-cluster-namespaceId'
        containerCPU: !Select [0, !Split ["|", !Ref containerSize]]
        containerRAM: !Select [1, !Split ["|", !Ref containerSize]]
        imageVersion: !Ref imageVersion
        containerPort: !Ref containerPort
        healthCheckPath: !Ref healthCheckPath
        basePath: !Ref basePath
        priority: !Ref priority
        minContainers: !Ref minContainers
        maxContainers: !Ref maxContainers
        autoScalingTargetValue: !Ref autoScalingTargetValue
        autoScalingRoleARN: 
          Fn::ImportValue:
            !Sub '${project}-${environment}-cluster-autoScalingRoleARN'
        executionRoleARN: 
          Fn::ImportValue:
            !Sub '${project}-${environment}-cluster-executionRoleARN'
        taskRoleARN: !GetAtt TaskRoles.Outputs.taskRoleARN
        internalSecurityGroupId:  
          Fn::ImportValue:
            Name: !Sub '${project}-${environment}-cluster-containerInternalSecurityGroupId'
  
  Pipeline:
    Type: AWS::CloudFormation::Stack
    DependsOn: ImageRepository
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/service/modules/pipeline/main.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment
        service: !Ref serviceName
        cfnBucketName: !Ref cfnBucketName
        serviceRepository: !Ref serviceRepository
        repositoryBranch: !Ref repositoryBranch
        deployService: !Ref deployService

# Outputs: