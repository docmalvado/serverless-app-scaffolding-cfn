AWSTemplateFormatVersion: 2010-09-09 
Description: Deploy a complete ECS + Fargate solution.
Parameters:
  project:
    Type: String
    AllowedPattern: ^(?:[a-z0-9]+(?:[-][a-z0-9]+)*)+$ 
  environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - qa
      - prod
  cfnBucketName:
    Type: String
  serviceName:
    Type: String
  clusterName:
    Type: String
  backendRepository:
    Type: String
  repositoryBranch:
    Type: String
    Default: main
  loadBalancerSecurityGroupId:
    Type: String
  loadBalancerListenerARN:
    Type: String
  namespaceId:
    Type: String
  containerSize:
    Type: String
    Description: CPU Size | RAM Size
    AllowedValues:
      - 256|0.5GB
      - 256|1GB
      - 256|2GB
      - 512|1GB
      - 512|2GB
      - 512|3GB
      - 512|4GB
      - 1024|2GB
      - 1024|3GB
      - 1024|4GB
      - 1024|5GB
      - 1024|6GB
      - 1024|7GB
      - 1024|8GB
      - 2048|4GB
      - 2048|5GB
      - 2048|6GB
      - 2048|7GB
      - 2048|8GB
      - 2048|9GB
      - 2048|10GB
      - 2048|11GB
      - 2048|12GB
      - 2048|13GB
      - 2048|14GB
      - 2048|15GB
      - 2048|16GB
      - 4096|8GB
      - 4096|9GB
      - 4096|10GB
      - 4096|11GB
      - 4096|12GB
      - 4096|13GB
      - 4096|14GB
      - 4096|15GB
      - 4096|16GB
      - 4096|17GB
      - 4096|18GB
      - 4096|19GB
      - 4096|20GB
      - 4096|21GB
      - 4096|22GB
      - 4096|23GB
      - 4096|24GB
      - 4096|25GB
      - 4096|26GB
      - 4096|27GB
      - 4096|28GB
      - 4096|29GB
      - 4096|30GB
  containerPort:
    Type: String
  healthCheckPath:
    Type: String
  basePath:
    Type: String
  priority:
    Type: String
  minContainers:
    Type: Number
  maxContainers:
    Type: Number
  autoScalingTargetValue:
    Type: String
  autoScalingRoleARN:
    Type: String
  executionRoleARN:
    Type: String
  containerInternalSecurityGroupId:
    Type: String
  deployService:
    Type: String
    Default: 'false'
    AllowedValues:
      - 'true'
      - 'false'
Conditions:
  doDeploy: !Equals 
    - !Ref deployService
    - 'true'
Resources:
  TaskRoles:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/modules/service/task-roles.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment

  ImageRepository:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/modules/service/image-repository.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment
        service: !Ref serviceName

  Service:
    Type: AWS::CloudFormation::Stack
    Condition: doDeploy
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/modules/service/service.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment
        clusterName: !Ref clusterName
        serviceName: !Ref serviceName
        vpcId: 
          Fn::ImportValue:
            !Sub ${project}-commons-vpcId
        loadBalancerSecurityGroupId: !Ref loadBalancerSecurityGroupId
        loadBalancerListenerARN: !Ref loadBalancerListenerARN
        serviceSubnetsIdList: 
          Fn::ImportValue:
            !Sub "${project}-commons-privateSubnetsIdList"
        namespaceId: !Ref namespaceId
        containerCPU: !Select [0, !Split ["|", !Ref containerSize]]
        containerRAM: !Select [1, !Split ["|", !Ref containerSize]]
        imageVersion: latest
        containerPort: !Ref containerPort
        healthCheckPath: !Ref healthCheckPath
        basePath: !Ref basePath
        priority: !Ref priority
        minContainers: !Ref minContainers
        maxContainers: !Ref maxContainers
        autoScalingTargetValue: !Ref autoScalingTargetValue
        autoScalingRoleARN: !Ref autoScalingRoleARN
        executionRoleARN: !Ref executionRoleARN
        taskRoleARN: !GetAtt TaskRoles.Outputs.taskRoleARN
        internalSecurityGroupId: !Ref containerInternalSecurityGroupId
  
  Pipeline:
    Type: AWS::CloudFormation::Stack
    DependsOn: ImageRepository
    Properties: 
      TemplateURL: !Sub https://s3.amazonaws.com/${cfnBucketName}/${project}/backend/modules/service/pipeline/main.yml
      Parameters: 
        project: !Ref project
        environment: !Ref environment
        service: !Ref serviceName
        cfnBucketName: !Ref cfnBucketName
        backendRepository: !Ref backendRepository
        repositoryBranch: !Ref repositoryBranch

# Outputs: